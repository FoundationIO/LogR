@using Framework.Web.Routing
@using Microsoft.AspNetCore.Routing
@using Framework.Web.HtmlHelpers;

@model Framework.Infrastructure.Models.Search.BaseSearchCriteria

@*
    <div class="pagination">
    <ul>
    <li class="disabled"><a href="#">Prev</a></li>
    <li class="active"><a href="#">1</a></li>
    <li><a href="#">2</a></li>
    <li><a href="#">3</a></li>
    <li><a href="#">Next</a></li>
    </ul>
    </div>
*@

@{
    var razorWriter = ViewContext.Writer;

    if ((bool)ViewData["Inactive"])
    {

        <li class=\"disabled\"><a href=\"#\">@ViewData["Text"]</a></li>;
    }
    else
    {
        var routeData = new RouteValueDictionary { { "page", ViewData["PageIndex"].ToString() }, { "pageSize", Model.PageSize } };

        // Add querystring parameters to the route collection
        routeData.AddQueryStringParameters(this.Context);

        string classValue = "";
        if ((bool)ViewData["Selected"])
        {
            classValue = "active";
        }

        var linkMarkup = Html.ActionLink(
                ViewData["Text"].ToString(),                                    // Link Text
                Html.ViewContext.RouteData.Values["action"].ToString(),         // Action
                Html.ViewContext.RouteData.Values["controller"].ToString(),     // Controller
                routeData,                                                      // Route data
                null
            ).ToHtmlString();

        <li  class="@classValue">@Html.Raw(linkMarkup)</li>
    }
}
