@using Framework.Web.HtmlHelpers
@using LogR.Common.Constants

@model Framework.Infrastructure.Models.Result.ReturnListWithSearchModel<LogR.Common.Models.Logs.PerfLog, LogR.Common.Models.Search.PerformanceLogSearchCriteria>
<!-- Full Width Column -->
<div class="content-wrapper">
    <div class="container-fluid">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h1>
                Performance Logs
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                <li class="active">Performance Logs</li>
            </ol>
        </section>

        <!----------Breadcrumb------------>
        <section class="bg row">
            <div class="row filter-section">
                <div class="col-md-12">

                    @Html.Partial("_NewMessage", @Model)
                    <div class="">
                        <form id="frmFilter" action="/performance-logs" method="get" onkeypress="return submitForm(event)">
                            <div class="col-md-7">

                                <div id="search_box_container"></div>


                            </div>
                            <div class="col-md-3  form-group">
                                <input id="sortby" name="sortby" value="@Model.Search.SortBy" class="form-control" type="hidden">
                                <input id="sortascending" name="sortascending" value="@Model.Search.SortAscending" class="form-control" type="hidden">
                                <input id="pageSize" name="pageSize" value="@Model.Search.PageSize" class="form-control" type="hidden">
                                <div class="input-group pull-right">
                                    <input value="Filter Results" class="btn btn-primary " type="submit">&nbsp;
                                    <input id="reset" value="Reset" class="btn btn-default " type="reset">&nbsp;
                                    <input id="saveFilter" value="Save Filter" class="btn btn-success " type="button">
                                </div>

                            </div>
                            <div class="col-md-2 form-group">
                                <select id="js-example-data-array" name="select" class="js-example-data-array form-control">
                                    <option value="" selected disabled> Select Search</option>
                                </select>

                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>

        <!-- Main content -->
        <section class="content">

            <div class="row">

                <div class="col-md-12">
                    <div class="box">
                        <!-- /.box-header -->
                        <div class="box-body">




                            <table class="table table-striped table-hover" id="perfTable">
                                <thead>
                                    <tr>
                                        <th style="width: 5px"><input type="checkbox"></th>
                                        <th>Date</th>
                                        <th>App</th>
                                        <th>Module</th>
                                        <th>FunctionName</th>
                                        <th>ElapsedTime</th>
                                        <th>Status</th>
                                        <th>
                                            Message
                                            <div class="btn-group pull-right">

                                                <a href="#" data-toggle="dropdown"> <span class='fa fa-tasks dropdown-toggle '></span></a>

                                                <ul class="dropdown-menu stay-open" role="menu" style="padding:4px;" id="grpChkBox">


                                                    <li><input type="checkbox" name="MachineName" value="MachineName" /> Machine Name</li>
                                                    <li><input type="checkbox" name="timeCheckbox" value="startTime" />Start Time</li>
                                                    <li><input type="checkbox" name="processCheckbox" value="process" /> Process</li>
                                                    <li><input type="checkbox" name="timeCheckbox" value="thread" /> Thread</li>



                                                </ul>
                                            </div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var Current in Model.Model)
                                    {

                                        <tr>
                                            <td><input type="checkbox"></td>
                                            <td>@Current.Longdate.ToLocalTime()</td>
                                            <td>@Current.App <div class="MachineName"><span class="label label-warning"> @Current.MachineName </span></div><div></div></td>
                                            <td>@Current.PerfModule</td>
                                            <td>@Current.PerfFunctionName</td>
                                            <td>@Current.ElapsedTime<div class="startTime"><span class="label label-info"> @Current.StartTime </span></div></td>
                                            <td>@Current.PerfStatus</td>
                                            <td>
                                                <div class="message">@Current.Message</div>

                                                <div class="row">
                                                   

                                                    <div class="col-xs-2 process">
                                                        <small class="stats-label">Process</small><br />
                                                        <span class="label label-success"> @Current.ProcessId </span>
                                                    </div>
                                                    <div class="col-xs-2 thread">
                                                        <small class="stats-label">Thread</small><br />
                                                        <span class="label label-danger"> @Current.ThreadId </span>
                                                    </div>
                                                    

                                                   
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>


                            </table>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer clearfix">
                            @Html.Partial("_Pager", Model.Search)
                        </div>
                    </div>
                    <!-- /.box -->
                </div>

            </div><!-- /.row -->

        </section><!-- /.content -->
    </div><!-- /.container -->
    <div class="control-sidebar-bg" style="position: fixed; height: auto;"></div>
</div><!-- /.content-wrapper -->

<script type="text/javascript" charset="utf-8">

    doSearch = function (url,key, searchterm, res) {
                console.log('key get value', key);
                $.getJSON(url, function (data) {
                    if (data.isSuccess) {
                        console.log('data', data);
                        $data = data;
                        res(data.model);
                    } else {
                        console.log('error - fail',data);
                    }
                });
    };

            $(function () {
                window.visualSearch = new VisualSearch({
                    el: $('#search_box_container'),
                    placeholder: "Search",
                    strict: false,	//Strict Parameters, strict values?
                    search: function (json) {
                        var searchJson = jQuery.parseJSON(json);
                        $("div#search_query").empty();
                        console.log('search params', searchJson);
                        for (var item = 0; item < searchJson.length; item++) {

                            var keyItem = $("< input type= 'hidden' />");
                            keyItem.name = "SearchTerms[" + item + "].Key";
                            keyItem.val(searchJson[item].key);
                            $('<input>').attr({
                                type: 'hidden',
                                name: keyItem.name
                            }).val(searchJson[item].key).appendTo($("div#search_query"));



                            var valueItem = $("< input type= 'hidden' />");
                            valueItem.name = "SearchTerms[" + item + "].Value";
                            valueItem.val(searchJson[item].value);
                            $('<input>').attr({
                                type: 'hidden',
                                name: valueItem.name
                            }).val(searchJson[item].value).appendTo($("div#search_query"));

                            var operatorItem = $("< input type= 'hidden' />");
                            operatorItem.name = "SearchTerms[" + item + "].Operator";
                            operatorItem.val(searchJson[item].operator);
                            $('<input>').attr({
                                type: 'hidden',
                                name: operatorItem.name
                            }).val(searchJson[item].operator).appendTo($("div#search_query"));

                        }

                    },

                    parameters: [
                        {
                            key: "@SearchFieldContants.AppLogs.Date",
                            category: "Date Range",
                            placeholder: "Log Date",
                            type: "date",
                            min: 1,
                            max: 10
                        },

                        {
                            key: "@SearchFieldContants.PerformanceLogs.Machine",
                            placeholder: "Machine",
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("MachineNames", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.App",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("AppNames", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            placeholder: "App"
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.Ip",
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            placeholder: "IP Address",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("Ips", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.Username",
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            placeholder: "User Name",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("UserNames", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.ElapsedTime",
                            operators: [
                                "is",
                                "is not"
                            ],
                            placeholder: "Elapsed Time",
                            values: ['Time-1', 'Time-2']
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.ThreadId",
                            operators: [
                                "is",
                                "is not"
                            ],
                            placeholder: "Thread Id",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("ThreadIds", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.ProcessId",
                            operators: [
                                "is",
                                "is not"
                            ],
                            placeholder: "Process Id",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("ProcessIds", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            },
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.FileName",
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            placeholder: "File Name",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("FileNames", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            }
                        },
                        {
                            key: "@SearchFieldContants.AppLogs.FunctionName",
                            operators: [
                                "@SearchFieldContants.Operators.Is",
                                "@SearchFieldContants.Operators.IsNot",
                                "@SearchFieldContants.Operators.Contains",
                                "@SearchFieldContants.Operators.NotContains",
                                "@SearchFieldContants.Operators.StartsWith",
                                "@SearchFieldContants.Operators.EndsWith"
                            ],
                            placeholder: "Function Name",
                            getValues: function (key, searchterm, res) {
                                doSearch("@Url.Action("Functions", "LogExplorer")?keyword=" + searchterm,key, searchterm, res);
                            }
                        }
                    ],
                    defaultquery: [
                    ]

            });
        });
</script>
<script>
            // Code goes here

            $('.js-data-example-ajax').select2({
                ajax: {
                    url: 'https://api.github.com/search/repositories',
                    dataType: 'json'
                    // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
                }
            });

            var data = [
                {
                    id: 0,
                    text: 'enhancement'
                },
                {
                    id: 1,
                    text: 'bug'
                },
                {
                    id: 2,
                    text: 'duplicate'
                },
                {
                    id: 3,
                    text: 'invalid'
                },
                {
                    id: 4,
                    text: 'wontfix'
                }
            ];
            $(".js-example-data-array").select2({
                data: data
            })


</script>
<script type="text/javascript">
    $(document).ready(function () {

        $(".message").shorten();

    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('input[type="checkbox"]').click(function () {
            var inputValue = $(this).attr("value");
            $("." + inputValue).toggle();
        });
    });
</script>